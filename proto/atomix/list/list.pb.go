// Code generated by protoc-gen-go. DO NOT EDIT.
// source: atomix/list/list.proto

package list

import (
	context "context"
	fmt "fmt"
	headers "github.com/atomix/atomix-go-node/proto/atomix/headers"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResponseStatus int32

const (
	ResponseStatus_OK            ResponseStatus = 0
	ResponseStatus_NOOP          ResponseStatus = 1
	ResponseStatus_WRITE_LOCK    ResponseStatus = 2
	ResponseStatus_OUT_OF_BOUNDS ResponseStatus = 3
)

var ResponseStatus_name = map[int32]string{
	0: "OK",
	1: "NOOP",
	2: "WRITE_LOCK",
	3: "OUT_OF_BOUNDS",
}

var ResponseStatus_value = map[string]int32{
	"OK":            0,
	"NOOP":          1,
	"WRITE_LOCK":    2,
	"OUT_OF_BOUNDS": 3,
}

func (x ResponseStatus) String() string {
	return proto.EnumName(ResponseStatus_name, int32(x))
}

func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{0}
}

type EventResponse_Type int32

const (
	EventResponse_NONE    EventResponse_Type = 0
	EventResponse_ADDED   EventResponse_Type = 1
	EventResponse_REMOVED EventResponse_Type = 2
)

var EventResponse_Type_name = map[int32]string{
	0: "NONE",
	1: "ADDED",
	2: "REMOVED",
}

var EventResponse_Type_value = map[string]int32{
	"NONE":    0,
	"ADDED":   1,
	"REMOVED": 2,
}

func (x EventResponse_Type) String() string {
	return proto.EnumName(EventResponse_Type_name, int32(x))
}

func (EventResponse_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{21, 0}
}

type CreateRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Timeout              *duration.Duration     `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{0}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateRequest) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

type CreateResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{1}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type KeepAliveRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *KeepAliveRequest) Reset()         { *m = KeepAliveRequest{} }
func (m *KeepAliveRequest) String() string { return proto.CompactTextString(m) }
func (*KeepAliveRequest) ProtoMessage()    {}
func (*KeepAliveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{2}
}

func (m *KeepAliveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveRequest.Unmarshal(m, b)
}
func (m *KeepAliveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveRequest.Marshal(b, m, deterministic)
}
func (m *KeepAliveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveRequest.Merge(m, src)
}
func (m *KeepAliveRequest) XXX_Size() int {
	return xxx_messageInfo_KeepAliveRequest.Size(m)
}
func (m *KeepAliveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveRequest proto.InternalMessageInfo

func (m *KeepAliveRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type KeepAliveResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *KeepAliveResponse) Reset()         { *m = KeepAliveResponse{} }
func (m *KeepAliveResponse) String() string { return proto.CompactTextString(m) }
func (*KeepAliveResponse) ProtoMessage()    {}
func (*KeepAliveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{3}
}

func (m *KeepAliveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveResponse.Unmarshal(m, b)
}
func (m *KeepAliveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveResponse.Marshal(b, m, deterministic)
}
func (m *KeepAliveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveResponse.Merge(m, src)
}
func (m *KeepAliveResponse) XXX_Size() int {
	return xxx_messageInfo_KeepAliveResponse.Size(m)
}
func (m *KeepAliveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveResponse proto.InternalMessageInfo

func (m *KeepAliveResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type CloseRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Delete               bool                   `protobuf:"varint,2,opt,name=delete,proto3" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{4}
}

func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (m *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(m, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

func (m *CloseRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CloseRequest) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

type CloseResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CloseResponse) Reset()         { *m = CloseResponse{} }
func (m *CloseResponse) String() string { return proto.CompactTextString(m) }
func (*CloseResponse) ProtoMessage()    {}
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{5}
}

func (m *CloseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponse.Unmarshal(m, b)
}
func (m *CloseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponse.Marshal(b, m, deterministic)
}
func (m *CloseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponse.Merge(m, src)
}
func (m *CloseResponse) XXX_Size() int {
	return xxx_messageInfo_CloseResponse.Size(m)
}
func (m *CloseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponse proto.InternalMessageInfo

func (m *CloseResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type SizeRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SizeRequest) Reset()         { *m = SizeRequest{} }
func (m *SizeRequest) String() string { return proto.CompactTextString(m) }
func (*SizeRequest) ProtoMessage()    {}
func (*SizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{6}
}

func (m *SizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SizeRequest.Unmarshal(m, b)
}
func (m *SizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SizeRequest.Marshal(b, m, deterministic)
}
func (m *SizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SizeRequest.Merge(m, src)
}
func (m *SizeRequest) XXX_Size() int {
	return xxx_messageInfo_SizeRequest.Size(m)
}
func (m *SizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SizeRequest proto.InternalMessageInfo

func (m *SizeRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type SizeResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Size                 int32                   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SizeResponse) Reset()         { *m = SizeResponse{} }
func (m *SizeResponse) String() string { return proto.CompactTextString(m) }
func (*SizeResponse) ProtoMessage()    {}
func (*SizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{7}
}

func (m *SizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SizeResponse.Unmarshal(m, b)
}
func (m *SizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SizeResponse.Marshal(b, m, deterministic)
}
func (m *SizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SizeResponse.Merge(m, src)
}
func (m *SizeResponse) XXX_Size() int {
	return xxx_messageInfo_SizeResponse.Size(m)
}
func (m *SizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SizeResponse proto.InternalMessageInfo

func (m *SizeResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SizeResponse) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type ContainsRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Value                string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ContainsRequest) Reset()         { *m = ContainsRequest{} }
func (m *ContainsRequest) String() string { return proto.CompactTextString(m) }
func (*ContainsRequest) ProtoMessage()    {}
func (*ContainsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{8}
}

func (m *ContainsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainsRequest.Unmarshal(m, b)
}
func (m *ContainsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainsRequest.Marshal(b, m, deterministic)
}
func (m *ContainsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainsRequest.Merge(m, src)
}
func (m *ContainsRequest) XXX_Size() int {
	return xxx_messageInfo_ContainsRequest.Size(m)
}
func (m *ContainsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainsRequest proto.InternalMessageInfo

func (m *ContainsRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ContainsRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ContainsResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Contains             bool                    `protobuf:"varint,2,opt,name=contains,proto3" json:"contains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ContainsResponse) Reset()         { *m = ContainsResponse{} }
func (m *ContainsResponse) String() string { return proto.CompactTextString(m) }
func (*ContainsResponse) ProtoMessage()    {}
func (*ContainsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{9}
}

func (m *ContainsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainsResponse.Unmarshal(m, b)
}
func (m *ContainsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainsResponse.Marshal(b, m, deterministic)
}
func (m *ContainsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainsResponse.Merge(m, src)
}
func (m *ContainsResponse) XXX_Size() int {
	return xxx_messageInfo_ContainsResponse.Size(m)
}
func (m *ContainsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainsResponse proto.InternalMessageInfo

func (m *ContainsResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ContainsResponse) GetContains() bool {
	if m != nil {
		return m.Contains
	}
	return false
}

type AppendRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Value                string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AppendRequest) Reset()         { *m = AppendRequest{} }
func (m *AppendRequest) String() string { return proto.CompactTextString(m) }
func (*AppendRequest) ProtoMessage()    {}
func (*AppendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{10}
}

func (m *AppendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendRequest.Unmarshal(m, b)
}
func (m *AppendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendRequest.Marshal(b, m, deterministic)
}
func (m *AppendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendRequest.Merge(m, src)
}
func (m *AppendRequest) XXX_Size() int {
	return xxx_messageInfo_AppendRequest.Size(m)
}
func (m *AppendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendRequest proto.InternalMessageInfo

func (m *AppendRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AppendRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type AppendResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Status               ResponseStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=atomix.list.ResponseStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AppendResponse) Reset()         { *m = AppendResponse{} }
func (m *AppendResponse) String() string { return proto.CompactTextString(m) }
func (*AppendResponse) ProtoMessage()    {}
func (*AppendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{11}
}

func (m *AppendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendResponse.Unmarshal(m, b)
}
func (m *AppendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendResponse.Marshal(b, m, deterministic)
}
func (m *AppendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendResponse.Merge(m, src)
}
func (m *AppendResponse) XXX_Size() int {
	return xxx_messageInfo_AppendResponse.Size(m)
}
func (m *AppendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendResponse proto.InternalMessageInfo

func (m *AppendResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AppendResponse) GetStatus() ResponseStatus {
	if m != nil {
		return m.Status
	}
	return ResponseStatus_OK
}

type GetRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Index                uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{12}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetRequest) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type GetResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Status               ResponseStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=atomix.list.ResponseStatus" json:"status,omitempty"`
	Value                string                  `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{13}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetResponse) GetStatus() ResponseStatus {
	if m != nil {
		return m.Status
	}
	return ResponseStatus_OK
}

func (m *GetResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InsertRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Index                uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Value                string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *InsertRequest) Reset()         { *m = InsertRequest{} }
func (m *InsertRequest) String() string { return proto.CompactTextString(m) }
func (*InsertRequest) ProtoMessage()    {}
func (*InsertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{14}
}

func (m *InsertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertRequest.Unmarshal(m, b)
}
func (m *InsertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertRequest.Marshal(b, m, deterministic)
}
func (m *InsertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertRequest.Merge(m, src)
}
func (m *InsertRequest) XXX_Size() int {
	return xxx_messageInfo_InsertRequest.Size(m)
}
func (m *InsertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertRequest proto.InternalMessageInfo

func (m *InsertRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *InsertRequest) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *InsertRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InsertResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Status               ResponseStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=atomix.list.ResponseStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *InsertResponse) Reset()         { *m = InsertResponse{} }
func (m *InsertResponse) String() string { return proto.CompactTextString(m) }
func (*InsertResponse) ProtoMessage()    {}
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{15}
}

func (m *InsertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertResponse.Unmarshal(m, b)
}
func (m *InsertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertResponse.Marshal(b, m, deterministic)
}
func (m *InsertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertResponse.Merge(m, src)
}
func (m *InsertResponse) XXX_Size() int {
	return xxx_messageInfo_InsertResponse.Size(m)
}
func (m *InsertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsertResponse proto.InternalMessageInfo

func (m *InsertResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *InsertResponse) GetStatus() ResponseStatus {
	if m != nil {
		return m.Status
	}
	return ResponseStatus_OK
}

type RemoveRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Index                uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{16}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RemoveRequest) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type RemoveResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Status               ResponseStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=atomix.list.ResponseStatus" json:"status,omitempty"`
	Value                string                  `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RemoveResponse) Reset()         { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()    {}
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{17}
}

func (m *RemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveResponse.Unmarshal(m, b)
}
func (m *RemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveResponse.Marshal(b, m, deterministic)
}
func (m *RemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveResponse.Merge(m, src)
}
func (m *RemoveResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveResponse.Size(m)
}
func (m *RemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveResponse proto.InternalMessageInfo

func (m *RemoveResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RemoveResponse) GetStatus() ResponseStatus {
	if m != nil {
		return m.Status
	}
	return ResponseStatus_OK
}

func (m *RemoveResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ClearRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ClearRequest) Reset()         { *m = ClearRequest{} }
func (m *ClearRequest) String() string { return proto.CompactTextString(m) }
func (*ClearRequest) ProtoMessage()    {}
func (*ClearRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{18}
}

func (m *ClearRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearRequest.Unmarshal(m, b)
}
func (m *ClearRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearRequest.Marshal(b, m, deterministic)
}
func (m *ClearRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearRequest.Merge(m, src)
}
func (m *ClearRequest) XXX_Size() int {
	return xxx_messageInfo_ClearRequest.Size(m)
}
func (m *ClearRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearRequest proto.InternalMessageInfo

func (m *ClearRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type ClearResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ClearResponse) Reset()         { *m = ClearResponse{} }
func (m *ClearResponse) String() string { return proto.CompactTextString(m) }
func (*ClearResponse) ProtoMessage()    {}
func (*ClearResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{19}
}

func (m *ClearResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearResponse.Unmarshal(m, b)
}
func (m *ClearResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearResponse.Marshal(b, m, deterministic)
}
func (m *ClearResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearResponse.Merge(m, src)
}
func (m *ClearResponse) XXX_Size() int {
	return xxx_messageInfo_ClearResponse.Size(m)
}
func (m *ClearResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearResponse proto.InternalMessageInfo

func (m *ClearResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type EventRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Replay               bool                   `protobuf:"varint,2,opt,name=replay,proto3" json:"replay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{20}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *EventRequest) GetReplay() bool {
	if m != nil {
		return m.Replay
	}
	return false
}

type EventResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Type                 EventResponse_Type      `protobuf:"varint,2,opt,name=type,proto3,enum=atomix.list.EventResponse_Type" json:"type,omitempty"`
	Index                uint32                  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Value                string                  `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *EventResponse) Reset()         { *m = EventResponse{} }
func (m *EventResponse) String() string { return proto.CompactTextString(m) }
func (*EventResponse) ProtoMessage()    {}
func (*EventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{21}
}

func (m *EventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventResponse.Unmarshal(m, b)
}
func (m *EventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventResponse.Marshal(b, m, deterministic)
}
func (m *EventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventResponse.Merge(m, src)
}
func (m *EventResponse) XXX_Size() int {
	return xxx_messageInfo_EventResponse.Size(m)
}
func (m *EventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventResponse proto.InternalMessageInfo

func (m *EventResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *EventResponse) GetType() EventResponse_Type {
	if m != nil {
		return m.Type
	}
	return EventResponse_NONE
}

func (m *EventResponse) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *EventResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type IterateRequest struct {
	Header               *headers.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *IterateRequest) Reset()         { *m = IterateRequest{} }
func (m *IterateRequest) String() string { return proto.CompactTextString(m) }
func (*IterateRequest) ProtoMessage()    {}
func (*IterateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{22}
}

func (m *IterateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IterateRequest.Unmarshal(m, b)
}
func (m *IterateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IterateRequest.Marshal(b, m, deterministic)
}
func (m *IterateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IterateRequest.Merge(m, src)
}
func (m *IterateRequest) XXX_Size() int {
	return xxx_messageInfo_IterateRequest.Size(m)
}
func (m *IterateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IterateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IterateRequest proto.InternalMessageInfo

func (m *IterateRequest) GetHeader() *headers.RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type IterateResponse struct {
	Header               *headers.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Value                string                  `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *IterateResponse) Reset()         { *m = IterateResponse{} }
func (m *IterateResponse) String() string { return proto.CompactTextString(m) }
func (*IterateResponse) ProtoMessage()    {}
func (*IterateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04130b3f66fe801, []int{23}
}

func (m *IterateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IterateResponse.Unmarshal(m, b)
}
func (m *IterateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IterateResponse.Marshal(b, m, deterministic)
}
func (m *IterateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IterateResponse.Merge(m, src)
}
func (m *IterateResponse) XXX_Size() int {
	return xxx_messageInfo_IterateResponse.Size(m)
}
func (m *IterateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IterateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IterateResponse proto.InternalMessageInfo

func (m *IterateResponse) GetHeader() *headers.ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *IterateResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterEnum("atomix.list.ResponseStatus", ResponseStatus_name, ResponseStatus_value)
	proto.RegisterEnum("atomix.list.EventResponse_Type", EventResponse_Type_name, EventResponse_Type_value)
	proto.RegisterType((*CreateRequest)(nil), "atomix.list.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "atomix.list.CreateResponse")
	proto.RegisterType((*KeepAliveRequest)(nil), "atomix.list.KeepAliveRequest")
	proto.RegisterType((*KeepAliveResponse)(nil), "atomix.list.KeepAliveResponse")
	proto.RegisterType((*CloseRequest)(nil), "atomix.list.CloseRequest")
	proto.RegisterType((*CloseResponse)(nil), "atomix.list.CloseResponse")
	proto.RegisterType((*SizeRequest)(nil), "atomix.list.SizeRequest")
	proto.RegisterType((*SizeResponse)(nil), "atomix.list.SizeResponse")
	proto.RegisterType((*ContainsRequest)(nil), "atomix.list.ContainsRequest")
	proto.RegisterType((*ContainsResponse)(nil), "atomix.list.ContainsResponse")
	proto.RegisterType((*AppendRequest)(nil), "atomix.list.AppendRequest")
	proto.RegisterType((*AppendResponse)(nil), "atomix.list.AppendResponse")
	proto.RegisterType((*GetRequest)(nil), "atomix.list.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "atomix.list.GetResponse")
	proto.RegisterType((*InsertRequest)(nil), "atomix.list.InsertRequest")
	proto.RegisterType((*InsertResponse)(nil), "atomix.list.InsertResponse")
	proto.RegisterType((*RemoveRequest)(nil), "atomix.list.RemoveRequest")
	proto.RegisterType((*RemoveResponse)(nil), "atomix.list.RemoveResponse")
	proto.RegisterType((*ClearRequest)(nil), "atomix.list.ClearRequest")
	proto.RegisterType((*ClearResponse)(nil), "atomix.list.ClearResponse")
	proto.RegisterType((*EventRequest)(nil), "atomix.list.EventRequest")
	proto.RegisterType((*EventResponse)(nil), "atomix.list.EventResponse")
	proto.RegisterType((*IterateRequest)(nil), "atomix.list.IterateRequest")
	proto.RegisterType((*IterateResponse)(nil), "atomix.list.IterateResponse")
}

func init() { proto.RegisterFile("atomix/list/list.proto", fileDescriptor_f04130b3f66fe801) }

var fileDescriptor_f04130b3f66fe801 = []byte{
	// 816 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xdd, 0x4e, 0xdb, 0x48,
	0x14, 0x8e, 0xf3, 0x63, 0xc2, 0x09, 0x0e, 0x66, 0xb4, 0x62, 0x83, 0xf9, 0xd9, 0xd5, 0x5c, 0xa1,
	0xbd, 0x30, 0x2b, 0xd0, 0xee, 0x45, 0xa5, 0x4a, 0xa5, 0x89, 0x1b, 0xa2, 0x50, 0x5c, 0x39, 0xd0,
	0xaa, 0x15, 0x6d, 0x64, 0xc8, 0x40, 0x2d, 0x05, 0xdb, 0xb5, 0x27, 0x11, 0x50, 0xf1, 0x0e, 0x95,
	0xfa, 0x52, 0xbd, 0xee, 0x13, 0x55, 0xf1, 0xd8, 0x8e, 0xc7, 0x49, 0xae, 0x46, 0x88, 0xde, 0x24,
	0x39, 0x3e, 0x67, 0xbe, 0xf3, 0xe7, 0xf9, 0xce, 0x09, 0xac, 0xdb, 0xd4, 0xbb, 0x71, 0x6e, 0xf7,
	0x86, 0x4e, 0x48, 0xa3, 0x0f, 0xdd, 0x0f, 0x3c, 0xea, 0xa1, 0x1a, 0x7b, 0xae, 0x4f, 0x1e, 0x69,
	0x3b, 0xd7, 0x9e, 0x77, 0x3d, 0x24, 0x7b, 0x91, 0xea, 0x62, 0x74, 0xb5, 0x37, 0x18, 0x05, 0x36,
	0x75, 0x3c, 0x97, 0x19, 0x6b, 0x5b, 0x31, 0xc8, 0x67, 0x62, 0x0f, 0x48, 0x10, 0x26, 0xdf, 0x4c,
	0x8b, 0xbf, 0x82, 0xd2, 0x0c, 0x88, 0x4d, 0x89, 0x45, 0xbe, 0x8c, 0x48, 0x48, 0xd1, 0x7f, 0x20,
	0x33, 0x8b, 0x86, 0xf4, 0xb7, 0xb4, 0x5b, 0xdb, 0xdf, 0xd6, 0x63, 0x67, 0xc9, 0xb9, 0xd8, 0xf0,
	0x28, 0x12, 0xad, 0xd8, 0x18, 0x1d, 0xc0, 0x12, 0x75, 0x6e, 0x88, 0x37, 0xa2, 0x8d, 0x62, 0x74,
	0x6e, 0x43, 0x67, 0x71, 0xe9, 0x49, 0x5c, 0x7a, 0x2b, 0x8e, 0xcb, 0x4a, 0x2c, 0xf1, 0x11, 0xd4,
	0x13, 0xe7, 0xa1, 0xef, 0xb9, 0x21, 0x41, 0xff, 0xe7, 0xbc, 0xef, 0xcc, 0x7a, 0x67, 0x96, 0xbc,
	0x7b, 0xdc, 0x01, 0xb5, 0x4b, 0x88, 0x7f, 0x38, 0x74, 0xc6, 0x82, 0x99, 0xe0, 0x2e, 0xac, 0x65,
	0xa0, 0x04, 0xe3, 0xfa, 0x08, 0x2b, 0xcd, 0xa1, 0x17, 0x8a, 0x56, 0x77, 0x1d, 0xe4, 0x01, 0x19,
	0x12, 0x4a, 0xa2, 0xe2, 0x56, 0xad, 0x58, 0xc2, 0x6d, 0x50, 0x62, 0x78, 0xc1, 0x38, 0x5b, 0x50,
	0xeb, 0x39, 0xf7, 0xa2, 0xa5, 0xfb, 0x00, 0x2b, 0x0c, 0x45, 0x2c, 0x1a, 0x84, 0xa0, 0x1c, 0x3a,
	0xf7, 0x2c, 0xd9, 0x8a, 0x15, 0xfd, 0xc6, 0x9f, 0x60, 0xb5, 0xe9, 0xb9, 0xd4, 0x76, 0xdc, 0x50,
	0xb0, 0x98, 0x7f, 0x40, 0x65, 0x6c, 0x0f, 0x47, 0x0c, 0x7e, 0xd9, 0x62, 0x02, 0xbe, 0x02, 0x75,
	0x8a, 0x2f, 0x18, 0xbf, 0x06, 0xd5, 0xcb, 0x18, 0x2b, 0x6e, 0x58, 0x2a, 0xe3, 0x73, 0x50, 0x0e,
	0x7d, 0x9f, 0xb8, 0x83, 0x47, 0xc9, 0xe2, 0x01, 0xea, 0x09, 0xba, 0x60, 0x0e, 0x07, 0x20, 0x87,
	0xd4, 0xa6, 0x23, 0x96, 0x41, 0x7d, 0x7f, 0x53, 0xcf, 0x90, 0x4e, 0x7a, 0xa8, 0x17, 0x99, 0x58,
	0xb1, 0x29, 0x7e, 0x0f, 0xd0, 0x26, 0x54, 0x3c, 0x33, 0xc7, 0x1d, 0x90, 0xdb, 0xc8, 0xb1, 0x62,
	0x31, 0x01, 0x7f, 0x93, 0xa0, 0x16, 0x61, 0x3f, 0x41, 0x5e, 0xd3, 0x62, 0x97, 0xb2, 0xc5, 0x0e,
	0x40, 0xe9, 0xb8, 0x21, 0x09, 0x1e, 0x25, 0xe1, 0x05, 0x3e, 0x1f, 0xa0, 0x9e, 0xf8, 0x7c, 0x8a,
	0x06, 0x9f, 0x83, 0x62, 0x91, 0x1b, 0x4f, 0x94, 0x64, 0x17, 0xf4, 0xf8, 0xbb, 0x04, 0xf5, 0x04,
	0xfe, 0xf7, 0x69, 0xb3, 0x31, 0xe1, 0x70, 0x62, 0x07, 0x82, 0xe4, 0x18, 0x71, 0x75, 0x04, 0x23,
	0x3e, 0x53, 0x8c, 0x31, 0x71, 0xa9, 0xf8, 0x4c, 0x09, 0x88, 0x3f, 0xb4, 0xef, 0x92, 0x99, 0xc2,
	0x24, 0xfc, 0x53, 0x02, 0x25, 0xc6, 0x17, 0xee, 0x41, 0x99, 0xde, 0xf9, 0x24, 0xee, 0xc0, 0x5f,
	0x5c, 0x07, 0x38, 0x0f, 0xfa, 0xe9, 0x9d, 0x4f, 0xac, 0xc8, 0x78, 0xfa, 0x66, 0x94, 0xe6, 0x5e,
	0x86, 0x72, 0xb6, 0x33, 0xbb, 0x50, 0x9e, 0x9c, 0x44, 0x55, 0x28, 0x9f, 0x98, 0x27, 0x86, 0x5a,
	0x40, 0xcb, 0x50, 0x39, 0x6c, 0xb5, 0x8c, 0x96, 0x2a, 0xa1, 0x1a, 0x2c, 0x59, 0xc6, 0x6b, 0xf3,
	0xad, 0xd1, 0x52, 0x8b, 0xb8, 0x0d, 0xf5, 0x0e, 0x25, 0x81, 0xf0, 0x9e, 0x83, 0xfb, 0xb0, 0x9a,
	0x02, 0x09, 0x96, 0x67, 0x2e, 0x83, 0xff, 0x63, 0x4c, 0xae, 0x40, 0xf6, 0xed, 0x44, 0x32, 0x14,
	0xcd, 0xae, 0x5a, 0x60, 0x59, 0x9a, 0x6f, 0x54, 0x09, 0xd5, 0x01, 0xde, 0x59, 0x9d, 0x53, 0xa3,
	0x7f, 0x6c, 0x36, 0xbb, 0x6a, 0x11, 0xad, 0x81, 0x62, 0x9e, 0x9d, 0xf6, 0xcd, 0x57, 0xfd, 0x97,
	0xe6, 0xd9, 0x49, 0xab, 0xa7, 0x96, 0xf6, 0x7f, 0xc8, 0x50, 0x3b, 0x76, 0x42, 0xda, 0x23, 0xc1,
	0xd8, 0xb9, 0x24, 0xa8, 0x09, 0x32, 0x5b, 0xb5, 0x90, 0xc6, 0xf5, 0x81, 0x5b, 0xfe, 0xb4, 0xcd,
	0xb9, 0x3a, 0x16, 0x0d, 0x2e, 0xa0, 0x63, 0x58, 0x4e, 0x57, 0x23, 0xb4, 0xcd, 0xd9, 0xe6, 0xb7,
	0x2f, 0x6d, 0x67, 0x91, 0x3a, 0x45, 0x7b, 0x01, 0x95, 0x68, 0x79, 0x41, 0x1b, 0xbc, 0xd7, 0xcc,
	0xbe, 0xa4, 0x69, 0xf3, 0x54, 0x29, 0xc2, 0x73, 0x28, 0x4f, 0xf6, 0x0d, 0xd4, 0xe0, 0xac, 0x32,
	0x8b, 0x8c, 0xb6, 0x31, 0x47, 0x93, 0x1e, 0xef, 0x40, 0x35, 0x19, 0xf9, 0x68, 0x8b, 0x77, 0xc4,
	0x6f, 0x1a, 0xda, 0xf6, 0x02, 0x6d, 0x0a, 0xd5, 0x04, 0x99, 0xcd, 0xdd, 0x5c, 0x79, 0xb9, 0x51,
	0x9f, 0x2b, 0x2f, 0x3f, 0xa8, 0x19, 0x08, 0xe3, 0xf6, 0x1c, 0x08, 0x37, 0x64, 0x72, 0x20, 0xfc,
	0x30, 0xc0, 0x05, 0xf4, 0x0c, 0x4a, 0x6d, 0x42, 0xd1, 0x9f, 0x9c, 0xd5, 0x74, 0x28, 0x6b, 0x8d,
	0x59, 0x45, 0x36, 0x00, 0x46, 0xbf, 0xb9, 0x00, 0x38, 0xca, 0xd7, 0x36, 0xe7, 0xea, 0xf8, 0xb6,
	0x12, 0x3b, 0x98, 0x69, 0xeb, 0x94, 0x42, 0x67, 0xda, 0x9a, 0xa1, 0x45, 0x16, 0x46, 0x44, 0x0f,
	0x61, 0x0e, 0x22, 0xcb, 0x7a, 0x39, 0x08, 0x8e, 0x4e, 0x70, 0xe1, 0x5f, 0x09, 0x1d, 0xc1, 0x52,
	0x7c, 0x51, 0x51, 0xae, 0x62, 0x1c, 0x0f, 0x68, 0x5b, 0xf3, 0x95, 0x53, 0xa4, 0x0b, 0x39, 0xfa,
	0x07, 0x73, 0xf0, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x62, 0xb3, 0xb3, 0x8e, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ListServiceClient is the client API for ListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ListServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error)
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error)
	Size(ctx context.Context, in *SizeRequest, opts ...grpc.CallOption) (*SizeResponse, error)
	Contains(ctx context.Context, in *ContainsRequest, opts ...grpc.CallOption) (*ContainsResponse, error)
	Append(ctx context.Context, in *AppendRequest, opts ...grpc.CallOption) (*AppendResponse, error)
	Insert(ctx context.Context, in *InsertRequest, opts ...grpc.CallOption) (*InsertResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	Clear(ctx context.Context, in *ClearRequest, opts ...grpc.CallOption) (*ClearResponse, error)
	Events(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (ListService_EventsClient, error)
	Iterate(ctx context.Context, in *IterateRequest, opts ...grpc.CallOption) (ListService_IterateClient, error)
}

type listServiceClient struct {
	cc *grpc.ClientConn
}

func NewListServiceClient(cc *grpc.ClientConn) ListServiceClient {
	return &listServiceClient{cc}
}

func (c *listServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/atomix.list.ListService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error) {
	out := new(KeepAliveResponse)
	err := c.cc.Invoke(ctx, "/atomix.list.ListService/KeepAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error) {
	out := new(CloseResponse)
	err := c.cc.Invoke(ctx, "/atomix.list.ListService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) Size(ctx context.Context, in *SizeRequest, opts ...grpc.CallOption) (*SizeResponse, error) {
	out := new(SizeResponse)
	err := c.cc.Invoke(ctx, "/atomix.list.ListService/Size", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) Contains(ctx context.Context, in *ContainsRequest, opts ...grpc.CallOption) (*ContainsResponse, error) {
	out := new(ContainsResponse)
	err := c.cc.Invoke(ctx, "/atomix.list.ListService/Contains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) Append(ctx context.Context, in *AppendRequest, opts ...grpc.CallOption) (*AppendResponse, error) {
	out := new(AppendResponse)
	err := c.cc.Invoke(ctx, "/atomix.list.ListService/Append", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) Insert(ctx context.Context, in *InsertRequest, opts ...grpc.CallOption) (*InsertResponse, error) {
	out := new(InsertResponse)
	err := c.cc.Invoke(ctx, "/atomix.list.ListService/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/atomix.list.ListService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := c.cc.Invoke(ctx, "/atomix.list.ListService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) Clear(ctx context.Context, in *ClearRequest, opts ...grpc.CallOption) (*ClearResponse, error) {
	out := new(ClearResponse)
	err := c.cc.Invoke(ctx, "/atomix.list.ListService/Clear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listServiceClient) Events(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (ListService_EventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ListService_serviceDesc.Streams[0], "/atomix.list.ListService/Events", opts...)
	if err != nil {
		return nil, err
	}
	x := &listServiceEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ListService_EventsClient interface {
	Recv() (*EventResponse, error)
	grpc.ClientStream
}

type listServiceEventsClient struct {
	grpc.ClientStream
}

func (x *listServiceEventsClient) Recv() (*EventResponse, error) {
	m := new(EventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *listServiceClient) Iterate(ctx context.Context, in *IterateRequest, opts ...grpc.CallOption) (ListService_IterateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ListService_serviceDesc.Streams[1], "/atomix.list.ListService/Iterate", opts...)
	if err != nil {
		return nil, err
	}
	x := &listServiceIterateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ListService_IterateClient interface {
	Recv() (*IterateResponse, error)
	grpc.ClientStream
}

type listServiceIterateClient struct {
	grpc.ClientStream
}

func (x *listServiceIterateClient) Recv() (*IterateResponse, error) {
	m := new(IterateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ListServiceServer is the server API for ListService service.
type ListServiceServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	KeepAlive(context.Context, *KeepAliveRequest) (*KeepAliveResponse, error)
	Close(context.Context, *CloseRequest) (*CloseResponse, error)
	Size(context.Context, *SizeRequest) (*SizeResponse, error)
	Contains(context.Context, *ContainsRequest) (*ContainsResponse, error)
	Append(context.Context, *AppendRequest) (*AppendResponse, error)
	Insert(context.Context, *InsertRequest) (*InsertResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	Clear(context.Context, *ClearRequest) (*ClearResponse, error)
	Events(*EventRequest, ListService_EventsServer) error
	Iterate(*IterateRequest, ListService_IterateServer) error
}

// UnimplementedListServiceServer can be embedded to have forward compatible implementations.
type UnimplementedListServiceServer struct {
}

func (*UnimplementedListServiceServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedListServiceServer) KeepAlive(ctx context.Context, req *KeepAliveRequest) (*KeepAliveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeepAlive not implemented")
}
func (*UnimplementedListServiceServer) Close(ctx context.Context, req *CloseRequest) (*CloseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedListServiceServer) Size(ctx context.Context, req *SizeRequest) (*SizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Size not implemented")
}
func (*UnimplementedListServiceServer) Contains(ctx context.Context, req *ContainsRequest) (*ContainsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contains not implemented")
}
func (*UnimplementedListServiceServer) Append(ctx context.Context, req *AppendRequest) (*AppendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Append not implemented")
}
func (*UnimplementedListServiceServer) Insert(ctx context.Context, req *InsertRequest) (*InsertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Insert not implemented")
}
func (*UnimplementedListServiceServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedListServiceServer) Remove(ctx context.Context, req *RemoveRequest) (*RemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedListServiceServer) Clear(ctx context.Context, req *ClearRequest) (*ClearResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Clear not implemented")
}
func (*UnimplementedListServiceServer) Events(req *EventRequest, srv ListService_EventsServer) error {
	return status.Errorf(codes.Unimplemented, "method Events not implemented")
}
func (*UnimplementedListServiceServer) Iterate(req *IterateRequest, srv ListService_IterateServer) error {
	return status.Errorf(codes.Unimplemented, "method Iterate not implemented")
}

func RegisterListServiceServer(s *grpc.Server, srv ListServiceServer) {
	s.RegisterService(&_ListService_serviceDesc, srv)
}

func _ListService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.list.ListService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_KeepAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeepAliveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).KeepAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.list.ListService/KeepAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).KeepAlive(ctx, req.(*KeepAliveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.list.ListService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_Size_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).Size(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.list.ListService/Size",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).Size(ctx, req.(*SizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_Contains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).Contains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.list.ListService/Contains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).Contains(ctx, req.(*ContainsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_Append_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).Append(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.list.ListService/Append",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).Append(ctx, req.(*AppendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.list.ListService/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).Insert(ctx, req.(*InsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.list.ListService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.list.ListService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_Clear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).Clear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.list.ListService/Clear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).Clear(ctx, req.(*ClearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListService_Events_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ListServiceServer).Events(m, &listServiceEventsServer{stream})
}

type ListService_EventsServer interface {
	Send(*EventResponse) error
	grpc.ServerStream
}

type listServiceEventsServer struct {
	grpc.ServerStream
}

func (x *listServiceEventsServer) Send(m *EventResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ListService_Iterate_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IterateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ListServiceServer).Iterate(m, &listServiceIterateServer{stream})
}

type ListService_IterateServer interface {
	Send(*IterateResponse) error
	grpc.ServerStream
}

type listServiceIterateServer struct {
	grpc.ServerStream
}

func (x *listServiceIterateServer) Send(m *IterateResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ListService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "atomix.list.ListService",
	HandlerType: (*ListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ListService_Create_Handler,
		},
		{
			MethodName: "KeepAlive",
			Handler:    _ListService_KeepAlive_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _ListService_Close_Handler,
		},
		{
			MethodName: "Size",
			Handler:    _ListService_Size_Handler,
		},
		{
			MethodName: "Contains",
			Handler:    _ListService_Contains_Handler,
		},
		{
			MethodName: "Append",
			Handler:    _ListService_Append_Handler,
		},
		{
			MethodName: "Insert",
			Handler:    _ListService_Insert_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ListService_Get_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _ListService_Remove_Handler,
		},
		{
			MethodName: "Clear",
			Handler:    _ListService_Clear_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Events",
			Handler:       _ListService_Events_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Iterate",
			Handler:       _ListService_Iterate_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "atomix/list/list.proto",
}
